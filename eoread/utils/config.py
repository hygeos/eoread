#!/usr/bin/env python3
# -*- coding: utf-8 -*-


from textwrap import dedent
import tomllib
from pathlib import Path
from typing import Dict

import click

"""
Configuration file management
"""

default_config_file = Path.cwd() / "config.toml"


def load_config() -> Dict:
    if not default_config_file.exists():
        msg = dedent(
            f"""
            Configuration file {default_config_file} is not yet initialized.
            Please initialize it with :
                python -m eoread.utils.config
            """
        )
        print(msg)
        raise RuntimeError(msg)

    with open(default_config_file, "rb") as fp:
        cfg = tomllib.load(fp)

    if "dir_data" in cfg:
        dir_data = Path(cfg["dir_data"])
        if not dir_data.exists():
            print(f"Error, {dir_data} does not exist. Please create it.")
            print("It will be used for storing data required for processing.")
            print(f"Either reconfigure dir_data in {default_config_file} or run:")
            print(f"   mkdir {dir_data}")
            raise FileNotFoundError(dir_data)

        # Set some defaults
        cfg["dir_static"] = Path(cfg.get("dir_static", dir_data / "static"))
        cfg["dir_samples"] = Path(cfg.get("dir_samples", dir_data / "sample_products"))
        cfg["dir_ancillary"] = Path(cfg.get("dir_ancillary", dir_data / "ancillary"))

    return cfg


@click.command()
@click.argument("dir_data")
def initialize(dir_data: Path):
    if default_config_file.exists():
        print(f'Configuration file "{default_config_file}" is already initialized')
    else:
        # Initialize default config file
        content = dedent(
            f"""
            # Configuration file
            # This file has been generated by eoread.utils.config

            # Root of the (disposable) data directory
            dir_data = "{dir_data}"

            # static data files, required for processing
            # (default: <dir_data>/static)
            # dir_static = "{dir_data}/static"

            # sample products, used for testing
            # (default: <dir_data>/sample_products)
            # dir_samples = "{dir_data}/sample_products"

            # ancillary data (downloaded on the fly)
            # (default: <dir_data>/ancillary)
            # dir_ancillary = "{dir_data}/ancillary"
        """
        )
        with open(default_config_file, "w") as fp:
            print("Created configuration file", default_config_file)
            fp.writelines(content)


if __name__ == "__main__":
    initialize()
